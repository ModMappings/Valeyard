/*
 * ModMappings API
 * This is the api for ModMappings. It is currently in development and in an alpha stage.
 *
 * The version of the OpenAPI document: 0.0.0-Dev
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.modmappings.webapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.modmappings.webapi.model.Mappable;
import org.modmappings.webapi.model.Mapping;
import org.modmappings.webapi.model.SimpleVersionedMappable;

/**
 * Represents a single piece of the sourcecode whose name can be remapped in a given version of the game, including its metadata and core information.
 */
@ApiModel(description = "Represents a single piece of the sourcecode whose name can be remapped in a given version of the game, including its metadata and core information.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-12-22T14:33:17.064+01:00[Europe/Berlin]")
public class DetailedMapping {
  public static final String SERIALIZED_NAME_MAPPABLE = "mappable";
  @SerializedName(SERIALIZED_NAME_MAPPABLE)
  private Mappable mappable;

  public static final String SERIALIZED_NAME_VERSIONED_MAPPABLE = "versionedMappable";
  @SerializedName(SERIALIZED_NAME_VERSIONED_MAPPABLE)
  private SimpleVersionedMappable versionedMappable;

  public static final String SERIALIZED_NAME_MAPPING_D_T_O = "mappingDTO";
  @SerializedName(SERIALIZED_NAME_MAPPING_D_T_O)
  private Mapping mappingDTO;


  public DetailedMapping mappable(Mappable mappable) {
    
    this.mappable = mappable;
    return this;
  }

   /**
   * Get mappable
   * @return mappable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Mappable getMappable() {
    return mappable;
  }


  public void setMappable(Mappable mappable) {
    this.mappable = mappable;
  }


  public DetailedMapping versionedMappable(SimpleVersionedMappable versionedMappable) {
    
    this.versionedMappable = versionedMappable;
    return this;
  }

   /**
   * Get versionedMappable
   * @return versionedMappable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SimpleVersionedMappable getVersionedMappable() {
    return versionedMappable;
  }


  public void setVersionedMappable(SimpleVersionedMappable versionedMappable) {
    this.versionedMappable = versionedMappable;
  }


  public DetailedMapping mappingDTO(Mapping mappingDTO) {
    
    this.mappingDTO = mappingDTO;
    return this;
  }

   /**
   * Get mappingDTO
   * @return mappingDTO
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Mapping getMappingDTO() {
    return mappingDTO;
  }


  public void setMappingDTO(Mapping mappingDTO) {
    this.mappingDTO = mappingDTO;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DetailedMapping detailedMapping = (DetailedMapping) o;
    return Objects.equals(this.mappable, detailedMapping.mappable) &&
        Objects.equals(this.versionedMappable, detailedMapping.versionedMappable) &&
        Objects.equals(this.mappingDTO, detailedMapping.mappingDTO);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mappable, versionedMappable, mappingDTO);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DetailedMapping {\n");
    sb.append("    mappable: ").append(toIndentedString(mappable)).append("\n");
    sb.append("    versionedMappable: ").append(toIndentedString(versionedMappable)).append("\n");
    sb.append("    mappingDTO: ").append(toIndentedString(mappingDTO)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

