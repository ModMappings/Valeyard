/*
 * ModMappings API
 * This is the api for ModMappings. It is currently in development and in an alpha stage.
 *
 * The version of the OpenAPI document: 0.0.0-Dev
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.modmappings.webapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.UUID;
import org.modmappings.webapi.model.Distribution;

/**
 * Represents a single mapping.
 */
@ApiModel(description = "Represents a single mapping.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-12-22T14:33:17.064+01:00[Europe/Berlin]")
public class Mapping {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private UUID id;

  public static final String SERIALIZED_NAME_CREATED_BY = "createdBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private UUID createdBy;

  public static final String SERIALIZED_NAME_CREATED_ON = "createdOn";
  @SerializedName(SERIALIZED_NAME_CREATED_ON)
  private OffsetDateTime createdOn;

  public static final String SERIALIZED_NAME_VERSIONED_MAPPABLE_ID = "versionedMappableId";
  @SerializedName(SERIALIZED_NAME_VERSIONED_MAPPABLE_ID)
  private UUID versionedMappableId;

  public static final String SERIALIZED_NAME_MAPPING_TYPE_ID = "mappingTypeId";
  @SerializedName(SERIALIZED_NAME_MAPPING_TYPE_ID)
  private UUID mappingTypeId;

  public static final String SERIALIZED_NAME_INPUT = "input";
  @SerializedName(SERIALIZED_NAME_INPUT)
  private String input;

  public static final String SERIALIZED_NAME_OUTPUT = "output";
  @SerializedName(SERIALIZED_NAME_OUTPUT)
  private String output;

  public static final String SERIALIZED_NAME_DOCUMENTATION = "documentation";
  @SerializedName(SERIALIZED_NAME_DOCUMENTATION)
  private String documentation;

  public static final String SERIALIZED_NAME_DISTRIBUTION = "distribution";
  @SerializedName(SERIALIZED_NAME_DISTRIBUTION)
  private Distribution distribution;


   /**
   * The id of the mapping.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The id of the mapping.")

  public UUID getId() {
    return id;
  }




   /**
   * The id of the user or system who created the mapping.
   * @return createdBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The id of the user or system who created the mapping.")

  public UUID getCreatedBy() {
    return createdBy;
  }




   /**
   * The moment this mapping was created.
   * @return createdOn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The moment this mapping was created.")

  public OffsetDateTime getCreatedOn() {
    return createdOn;
  }




   /**
   * The id of the versioned mappable this mapping exists for.
   * @return versionedMappableId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The id of the versioned mappable this mapping exists for.")

  public UUID getVersionedMappableId() {
    return versionedMappableId;
  }




   /**
   * The id of the mapping type this mapping exists for.
   * @return mappingTypeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The id of the mapping type this mapping exists for.")

  public UUID getMappingTypeId() {
    return mappingTypeId;
  }




  public Mapping input(String input) {
    
    this.input = input;
    return this;
  }

   /**
   * The input of the mapping.
   * @return input
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The input of the mapping.")

  public String getInput() {
    return input;
  }


  public void setInput(String input) {
    this.input = input;
  }


  public Mapping output(String output) {
    
    this.output = output;
    return this;
  }

   /**
   * The output of the mapping.
   * @return output
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The output of the mapping.")

  public String getOutput() {
    return output;
  }


  public void setOutput(String output) {
    this.output = output;
  }


  public Mapping documentation(String documentation) {
    
    this.documentation = documentation;
    return this;
  }

   /**
   * The documentation that accompanies the mapping. (EG: JavaDoc for a class, method or parameter.)
   * @return documentation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The documentation that accompanies the mapping. (EG: JavaDoc for a class, method or parameter.)")

  public String getDocumentation() {
    return documentation;
  }


  public void setDocumentation(String documentation) {
    this.documentation = documentation;
  }


  public Mapping distribution(Distribution distribution) {
    
    this.distribution = distribution;
    return this;
  }

   /**
   * Get distribution
   * @return distribution
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Distribution getDistribution() {
    return distribution;
  }


  public void setDistribution(Distribution distribution) {
    this.distribution = distribution;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Mapping mapping = (Mapping) o;
    return Objects.equals(this.id, mapping.id) &&
        Objects.equals(this.createdBy, mapping.createdBy) &&
        Objects.equals(this.createdOn, mapping.createdOn) &&
        Objects.equals(this.versionedMappableId, mapping.versionedMappableId) &&
        Objects.equals(this.mappingTypeId, mapping.mappingTypeId) &&
        Objects.equals(this.input, mapping.input) &&
        Objects.equals(this.output, mapping.output) &&
        Objects.equals(this.documentation, mapping.documentation) &&
        Objects.equals(this.distribution, mapping.distribution);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, createdBy, createdOn, versionedMappableId, mappingTypeId, input, output, documentation, distribution);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Mapping {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    createdOn: ").append(toIndentedString(createdOn)).append("\n");
    sb.append("    versionedMappableId: ").append(toIndentedString(versionedMappableId)).append("\n");
    sb.append("    mappingTypeId: ").append(toIndentedString(mappingTypeId)).append("\n");
    sb.append("    input: ").append(toIndentedString(input)).append("\n");
    sb.append("    output: ").append(toIndentedString(output)).append("\n");
    sb.append("    documentation: ").append(toIndentedString(documentation)).append("\n");
    sb.append("    distribution: ").append(toIndentedString(distribution)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

