import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'org.modmappings.java-library-conventions'
    id "org.openapi.generator" version "5.0.0"
    id "de.undercouch.download" version "4.1.1"
}

sourceSets {
    main {
        java {
            srcDir 'src/generated/java'
        }
    }
}

dependencies {
    implementation "org.openapitools:openapi-generator-gradle-plugin:3.3.4"

    implementation 'io.swagger:swagger-annotations:1.5.24'
    implementation "com.google.code.findbugs:jsr305:3.0.2"
    implementation 'com.squareup.okhttp3:okhttp:3.14.7'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.14.7'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'io.gsonfire:gson-fire:1.8.4'
    implementation group: 'org.apache.oltu.oauth2', name: 'org.apache.oltu.oauth2.client', version: '1.0.1'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.10'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
}

task downloadApiSpec(type: Download) {
    src "http://localhost:8080/v3/api-docs.yaml".toString()
    dest buildDir
}

openApiGenerate {
    skipValidateSpec = true
    generatorName = "java"
    inputSpec = "$buildDir/api-docs.yaml".toString()
    outputDir = "$buildDir/openapi".toString()
    apiPackage = "org.modmappings.webapi.api"
    invokerPackage = "org.modmappings.webapi.invoker"
    modelPackage = "org.modmappings.webapi.model"
    supportingFilesConstrainedTo = []
    configOptions = [
            dateLibrary: "java8",
            asyncNative: "true"
    ]
}

tasks.withType(GenerateTask) {
    outputs.upToDateWhen { false }
    outputs.cacheIf { false }
}

task cleanupApiGeneration(type: Delete) {
    delete "$buildDir/openapi".toString(), "$buildDir/api-docs.yaml".toString()
    followSymlinks = true
}

task copyApiSource(type: Copy) {
    group 'openapi tools'
    dependsOn tasks.openApiGenerate
    from "$buildDir/openapi/src/main/java"
    include "**/*.java"
    into "src/generated/java"
    finalizedBy tasks.cleanupApiGeneration
}

tasks.openApiGenerate.dependsOn downloadApiSpec

